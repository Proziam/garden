@import "tailwindcss";

@plugin "@tailwindcss/typography";
@custom-variant dark (&:where(.dark, .dark *));

@layer base {
  :root {
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
  }
  
  .prose {
    --tw-prose-body: theme(colors.zinc.600);
    --tw-prose-headings: theme(colors.zinc.900);
    --tw-prose-links: theme(colors.teal.500);
    --tw-prose-bold: theme(colors.zinc.900);
    --tw-prose-counters: theme(colors.zinc.600);
    --tw-prose-bullets: theme(colors.zinc.600);
    --tw-prose-hr: theme(colors.zinc.200);
    --tw-prose-quote-borders: theme(colors.zinc.200);
    --tw-prose-captions: theme(colors.zinc.500);
    --tw-prose-code: theme(colors.zinc.700);
    --tw-prose-code-bg: theme(colors.zinc.100);
    --tw-prose-pre-code: theme(colors.zinc.100);
    --tw-prose-pre-bg: theme(colors.zinc.900);
    --tw-prose-th-borders: theme(colors.zinc.300);
    --tw-prose-td-borders: theme(colors.zinc.200);
  }
  
  .dark .prose {
    --tw-prose-body: theme(colors.zinc.400);
    --tw-prose-headings: theme(colors.zinc.100);
    --tw-prose-links: theme(colors.teal.400);
    --tw-prose-bold: theme(colors.zinc.100);
    --tw-prose-counters: theme(colors.zinc.400);
    --tw-prose-bullets: theme(colors.zinc.400);
    --tw-prose-hr: theme(colors.zinc.700);
    --tw-prose-quote-borders: theme(colors.zinc.700);
    --tw-prose-captions: theme(colors.zinc.500);
    --tw-prose-code: theme(colors.zinc.300);
    --tw-prose-code-bg: theme(colors.zinc.800);
    --tw-prose-pre-code: theme(colors.zinc.200);
    --tw-prose-pre-bg: theme(colors.black);
    --tw-prose-th-borders: theme(colors.zinc.600);
    --tw-prose-td-borders: theme(colors.zinc.700);
  }
  
  .prose :where(h1, h2, h3, h4, h5, h6):not(:where([class~="not-prose"] *)) {
    font-weight: 600;
    letter-spacing: -0.025em;
  }
  
  .prose :where(a):not(:where([class~="not-prose"] *)) {
    font-weight: 600;
    text-decoration-color: theme(colors.teal.500 / 0.3);
    text-underline-offset: 2px;
    transition: all 150ms;
  }
  
  .prose :where(a):not(:where([class~="not-prose"] *)):hover {
    text-decoration-color: theme(colors.teal.500);
  }
  
  .prose :where(code):not(:where([class~="not-prose"] *)) {
    font-weight: 600;
    font-size: 0.875rem;
    padding: 0.125rem 0.375rem;
    background-color: var(--tw-prose-code-bg);
    border-radius: 0.375rem;
  }
  
  .prose :where(code):not(:where([class~="not-prose"] *))::before,
  .prose :where(code):not(:where([class~="not-prose"] *))::after {
    content: "";
  }
  
  .prose :where(pre):not(:where([class~="not-prose"] *)) {
    border-radius: 1.5rem;
    padding: 2rem;
    box-shadow: inset 0 0 0 1px theme(colors.zinc.900);
  }
  
  .dark .prose :where(pre):not(:where([class~="not-prose"] *)) {
    background-color: rgb(0 0 0 / 0.4);
    box-shadow: inset 0 0 0 1px rgb(255 255 255 / 0.1);
  }
  
  .prose :where(blockquote):not(:where([class~="not-prose"] *)) {
    font-style: italic;
    border-left-width: 2px;
  }
  
  .prose :where(img):not(:where([class~="not-prose"] *)) {
    border-radius: 1.5rem;
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  }
  
  .prose :where(hr):not(:where([class~="not-prose"] *)) {
    margin-top: 3rem;
    margin-bottom: 3rem;
  }
}

@layer utilities {
  .aspect-9\/10 {
    aspect-ratio: 9 / 10;
  }
}
